name: Build Image

on:
  workflow_dispatch:
  push:
    paths:
      - ".github/workflows/build.yaml"
      - "root/**"
      - "Dockerfile.*"
  pull_request:
    paths:
      - "root/**"
      - "Dockerfile.*"

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      BUILDKIT_HOST: tcp://0.0.0.0:1234
      DOCKER_CLI_EXPERIMENTAL: enabled
      DOCKER_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
      DOCKER_IMAGE: ts-dnsserver
      DOCKER_TAG: latest
      DOCKER_USER: roxedus
      PLATFORM_1: amd64
      PLATFORM_2: arm64
      REPO: roxedus/ts-dnsserver

    steps:
      - uses: actions/checkout@v1
      - name: Getting buildkit
        run: |
          sudo docker run --privileged linuxkit/binfmt:v0.7
          sudo docker run -d --privileged -p 1234:1234 --name buildkit moby/buildkit:latest --addr tcp://0.0.0.0:1234 \
          --oci-worker-platform linux/${PLATFORM_1} \
          --oci-worker-platform linux/${PLATFORM_2}
          sudo docker cp buildkit:/usr/bin/buildctl /usr/bin/

      - name: Build amd64
        env:
          DOCKERFILE_LOCATION: ./Dockerfile.amd64
        run: |
          buildctl build --frontend dockerfile.v0 \
          --opt platform=linux/${PLATFORM_1} \
          --opt filename=./${DOCKERFILE_LOCATION} \
          --output type=docker,name=${REPO}:${DOCKER_TAG}-${PLATFORM_1} \
          --local dockerfile=. \
          --local context=. | docker load

      - name: Build arm64
        env:
          DOCKERFILE_LOCATION: ./Dockerfile.arm64
        run: |
          buildctl build --frontend dockerfile.v0 \
          --frontend-opt platform=linux/${PLATFORM_2} \
          --frontend-opt filename=./${DOCKERFILE_LOCATION} \
          --output type=docker,name=${REPO}:${DOCKER_TAG}-${PLATFORM_2} \
          --local dockerfile=. \
          --local context=. | docker load

      - name: Login to registry
        if: github.event.issue.pull_request != 'false'
        run: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USER --password-stdin

      - name: Publish images
        if: github.event.issue.pull_request != 'false'
        run: |
          docker push ${REPO}:${DOCKER_TAG}-${PLATFORM_1}
          docker push ${REPO}:${DOCKER_TAG}-${PLATFORM_2}
      - name: Create manifest
        if: github.event.issue.pull_request != 'false'
        run: |
          docker manifest create ${DOCKER_USER}/${DOCKER_IMAGE}:${DOCKER_TAG} \
              ${REPO}:${DOCKER_TAG}-${PLATFORM_1} \
              ${REPO}:${DOCKER_TAG}-${PLATFORM_2}
          docker manifest push ${REPO}:${DOCKER_TAG}
          docker manifest annotate ${REPO}:${DOCKER_TAG} ${REPO}:${DOCKER_TAG}-${PLATFORM_1} --arch ${PLATFORM_1}
          docker manifest annotate ${REPO}:${DOCKER_TAG} ${REPO}:${DOCKER_TAG}-${PLATFORM_2} --arch ${PLATFORM_2}
          docker manifest push ${REPO}:${DOCKER_TAG}
